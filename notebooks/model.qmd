---
---
#

```{python}
#| echo: false
#| label: fig-midext-evo
#| fig-cap: The evolution of the probability for the tumor to remain lateralized (green) or to cross the mid-sagittal plane (red).
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import ticker
from lyscripts.plot.utils import COLORS
import shared

midline_model = shared.get_model("midline", load_samples=True)

t = np.linspace(0, 10, 11)
p_midline = {
  "lateralized": (1 - midline_model.midext_prob)**t,
  "extension": 1 - (1 - midline_model.midext_prob)**t,
}
dist = {
  "early": midline_model.get_distribution("early").pmf,
  "late": midline_model.get_distribution("late").pmf,
}
p_colors = {"lateralized": COLORS["green"], "extension": COLORS["red"]}
t_colors = {"early": COLORS["blue"], "late": COLORS["orange"]}
markers = {}

nrows, ncols = 2, 1
plt.rcParams.update(shared.get_fontsizes())
plt.rcParams.update(shared.get_figsizes(
  nrows=nrows,
  ncols=ncols,
  width=17,
  aspect_ratio=2.5,
))

fig, axes = plt.subplots(nrows=nrows, ncols=ncols, sharex=True)
w = 0.3

for label, p in p_midline.items():
  axes[0].plot(
    t, p_midline[label], "o-",
    label=label,
    color=p_colors[label],
  )
  for i, t_stage in enumerate(["early", "late"]):
    if label == "lateralized":
      axes[0].bar(
        t + i*w - w/2, dist[t_stage],
        color=t_colors[t_stage],
        width=w,
        label=f"{t_stage} T-cat.",
      )
    axes[1].plot(
      t, p * dist[t_stage], "o-",
      c=p_colors[label],
      mfc=t_colors[t_stage],
      mec=t_colors[t_stage],
      label=f"{label}, {t_stage}",
    )

axes[0].set_ylim(0., 1.)
axes[0].yaxis.set_major_formatter(ticker.StrMethodFormatter("{x:.0%}"))
axes[0].set_ylabel("probability")
axes[0].grid(axis="y", color=COLORS["gray"], alpha=0.5)

axes[0].legend()

axes[1].set_xlim(min(t), max(t))
axes[1].set_xticks(t)
axes[1].set_xlabel("time-step $t$")

axes[1].set_ylim(0., 0.25)
axes[1].yaxis.set_major_formatter(ticker.StrMethodFormatter("{x:.0%}"))
axes[1].set_ylabel("probability")
axes[1].grid(axis="y", color=COLORS["gray"], alpha=0.5)

axes[1].legend()

plt.show()
```
